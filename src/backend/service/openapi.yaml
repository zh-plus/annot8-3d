openapi: 3.0.1
info:
  description: A JWT-Protected API for 3D Object Annotation
  title: 3D Annotation API with JWT
  version: 1.0.0
servers:
- url: /
paths:
  /login:
    post:
      operationId: login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: Successfully authenticated
        "401":
          description: Unauthorized
        "404":
          description: Unauthorized
      summary: Authenticate and get a JWT token
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /register:
    post:
      operationId: register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Registration failed
      summary: Register a new user
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /projects:
    get:
      operationId: get_projects
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: List of user projects
        "401":
          description: Unauthorized - missing or invalid JWT
      security:
      - BearerAuth: []
      summary: Get a list of user projects
      x-openapi-router-controller: openapi_server.controllers.project_controller
    post:
      operationId: create_project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project created successfully
        "401":
          description: Unauthorized - missing or invalid JWT
      security:
      - BearerAuth: []
      summary: Create a new project
      x-openapi-router-controller: openapi_server.controllers.project_controller
  /projects/{project_id}/episodes:
    get:
      operationId: list_episodes
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
          description: List of episodes for the specified project
        "401":
          description: Unauthorized - missing or invalid JWT
        "404":
          description: Project not found
      security:
      - BearerAuth: []
      summary: Get a list of episodes for a project
      x-openapi-router-controller: openapi_server.controllers.episode_controller
    post:
      operationId: create_episode
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpisodeRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Episode'
          description: Episode created successfully
        "401":
          description: Unauthorized - missing or invalid JWT
        "404":
          description: Project not found
      security:
      - BearerAuth: []
      summary: Create a new episode for a specific project
      x-openapi-router-controller: openapi_server.controllers.episode_controller
  /projects/{project_id}/episodes/{episode_id}:
    get:
      operationId: get_episode
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: episode_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Episode'
          description: Details of the specified episode
        "401":
          description: Unauthorized - missing or invalid JWT
        "404":
          description: Project or Episode not found
      security:
      - BearerAuth: []
      summary: Get details of a specific episode within a project
      x-openapi-router-controller: openapi_server.controllers.episode_controller
  /projects/{project_id}/episodes/{episode_id}/annotations:
    get:
      operationId: get_annotations
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: episode_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Annotation'
                type: array
          description: List of annotations for the specified episode in a project
        "401":
          description: Unauthorized - missing or invalid JWT
        "404":
          description: Project or Episode not found
      security:
      - BearerAuth: []
      summary: Get annotations for a specific episode within a project
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /projects/{project_id}/episodes/{episode_id}/annotations/create:
    post:
      operationId: create_annotation
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: episode_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: Annotation created successfully
        "400":
          description: Bad request - missing or invalid data
        "401":
          description: Unauthorized - missing or invalid JWT
      security:
      - BearerAuth: []
      summary: Create a new annotation for a specific episode
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /projects/{project_id}/episodes/{episode_id}/annotations/{annotation_id}:
    delete:
      operationId: delete_annotation
      parameters:
      - description: The ID of the project
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The ID of the episode
        explode: false
        in: path
        name: episode_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The ID of the annotation to delete
        explode: false
        in: path
        name: annotation_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Annotation deleted successfully
        "400":
          description: Bad request - missing or invalid data
        "401":
          description: Unauthorized - missing or invalid JWT
        "404":
          description: "Project, Episode, or Annotation not found"
      security:
      - BearerAuth: []
      summary: Delete a specific annotation within an episode
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
    put:
      operationId: update_annotation
      parameters:
      - explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: episode_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: annotation_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: Annotation updated successfully
        "400":
          description: Bad request - missing or invalid data
        "401":
          description: Unauthorized - missing or invalid JWT
      security:
      - BearerAuth: []
      summary: Update a specific annotation within an episode
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /projects/upload_pcd:
    post:
      operationId: upload_pcd
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/upload_pcd_request'
        required: true
      responses:
        "200":
          description: File uploaded successfully
        "400":
          description: Bad request - invalid file format or missing project ID
        "401":
          description: Unauthorized - missing or invalid JWT
      security:
      - BearerAuth: []
      summary: Upload a .pcd file for a specific project
      x-openapi-router-controller: openapi_server.controllers.project_controller
  /projects/pcd_files:
    post:
      operationId: list_pcd_files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/list_pcd_files_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PCDFile'
                type: array
          description: List of .pcd files for the project
        "401":
          description: Unauthorized - missing or invalid JWT
      security:
      - BearerAuth: []
      summary: List all .pcd files for a specific project
      x-openapi-router-controller: openapi_server.controllers.project_controller
components:
  schemas:
    RegisterRequest:
      example:
        password: password
        username: username
      properties:
        username:
          title: username
          type: string
        password:
          description: a password field
          format: password
          title: password
          type: string
      required:
      - password
      - username
      title: RegisterRequest
      type: object
    LoginRequest:
      example:
        password: password
        username: username
      properties:
        username:
          title: username
          type: string
        password:
          description: a password field
          format: password
          title: password
          type: string
      required:
      - password
      - username
      title: LoginRequest
      type: object
    LoginResponse:
      example:
        token: token
      properties:
        token:
          description: JWT token passed back to the client
          title: token
          type: string
      title: LoginResponse
      type: object
    Episode:
      example:
        id: 1
        name: Episode 1
        description: Sequence of frames for building facade
      properties:
        id:
          description: Unique identifier for the episode
          type: integer
        name:
          description: Name of the episode
          type: string
        description:
          description: Description of the episode
          type: string
      title: Episode
      type: object
    EpisodeRequest:
      example:
        name: Episode 1
        description: Sequence of frames for building facade
      properties:
        name:
          description: Name of the episode
          type: string
        description:
          description: Description of the episode
          type: string
      required:
      - name
      title: EpisodeRequest
      type: object
    Project:
      example:
        id: 1
        name: Building Facade
        description: Annotations for building facade images
      properties:
        id:
          description: Unique identifier for the project
          type: integer
        name:
          description: Name of the project
          type: string
        description:
          description: Description of the project
          type: string
        episodes:
          items:
            $ref: '#/components/schemas/Episode'
          type: array
      title: Project
      type: object
    ProjectRequest:
      example:
        name: Building Facade
        description: Annotations for building facade images
      properties:
        name:
          description: Name of the project
          type: string
        description:
          description: Description of the project
          type: string
      required:
      - name
      title: ProjectRequest
      type: object
    PCDFile:
      example:
        id: 1
        file_name: file1.pcd
      properties:
        id:
          description: Unique identifier for the .pcd file
          type: integer
        file_name:
          description: Name of the .pcd file
          type: string
      required:
      - file_name
      - id
      title: PCDFile
      type: object
    AnnotationRequest:
      example:
        episode_id: 1
        pcd_file_id: 1
        label: Car
        geometry: cube
        size:
          width: 2.5
          height: 1.5
        position:
          x: 10.0
          "y": 5.0
          z: 2.0
        rotation:
          x: 0.0
          "y": 45.0
          z: 0.0
      properties:
        episode_id:
          description: The ID of the episode to annotate
          type: integer
        pcd_file_id:
          description: The ID of the .pcd file to annotate
          type: integer
        label:
          description: Label for the annotated object
          type: string
        geometry:
          description: The shape of the bounding box
          enum:
          - sphere
          - cube
          - polygon
          type: string
        size:
          $ref: '#/components/schemas/AnnotationRequest_size'
        position:
          $ref: '#/components/schemas/AnnotationRequest_position'
        rotation:
          $ref: '#/components/schemas/AnnotationRequest_position'
      required:
      - episode_id
      - geometry
      - label
      - pcd_file_id
      - position
      title: AnnotationRequest
      type: object
    Annotation:
      example:
        size: "{}"
        rotation: "{}"
        pcd_file_id: 6
        geometry: sphere
        id: 0
        label: label
        position: "{}"
      properties:
        id:
          description: Unique identifier for the annotation
          title: id
          type: integer
        pcd_file_id:
          description: The ID of the .pcd file
          title: pcd_file_id
          type: integer
        label:
          description: Label for the annotated object
          title: label
          type: string
        geometry:
          description: The shape of the bounding box
          enum:
          - sphere
          - cube
          - polygon
          title: geometry
          type: string
        size:
          title: size
          type: object
        position:
          title: position
          type: object
        rotation:
          title: rotation
          type: object
      required:
      - geometry
      - id
      - label
      title: Annotation
      type: object
    AnnotationUpdateRequest:
      allOf:
      - $ref: '#/components/schemas/AnnotationRequest'
      example:
        annotation_id: 0
      properties:
        annotation_id:
          description: The ID of the annotation to update
          title: annotation_id
          type: integer
      required:
      - annotation_id
      title: AnnotationUpdateRequest
    upload_pcd_request:
      properties:
        project_id:
          description: The ID of the project
          type: integer
        pcd_file:
          description: The .pcd file to be uploaded
          format: binary
          type: string
      type: object
    list_pcd_files_request:
      properties:
        project_id:
          description: The ID of the project
          title: project_id
          type: integer
      title: list_pcd_files_request
      type: object
    AnnotationRequest_size:
      properties:
        radius:
          description: Radius (if the geometry is a sphere)
          title: radius
          type: number
        width:
          description: Width (if applicable)
          title: width
          type: number
        height:
          description: Height (if applicable)
          title: height
          type: number
      title: AnnotationRequest_size
      type: object
    AnnotationRequest_position:
      properties:
        x:
          title: x
          type: number
        "y":
          title: "y"
          type: number
        z:
          title: z
          type: number
      title: AnnotationRequest_position
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_BearerAuth
